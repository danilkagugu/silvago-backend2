import "dotenv/config";
import mongoose from "mongoose";
import app from "./app.js";
import FtpSrv from "ftp-srv";
import path from "path";
import {
  downloadFiles,
  updateClientBonuses,
} from "./downloadDataBaseTorgsoft.js";

const {
  DB_URI,
  PORT,
  FTP_PORT,
  FTP_USER_SILVAGO,
  FTP_PASS_SILVAGO,
  FTP_USER_TORGSOFT,
  FTP_PASS_TORGSOFT,
} = process.env;

mongoose.set("strictQuery", true);

async function run() {
  try {
    // –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB
    await mongoose.connect(DB_URI);
    console.log("‚úÖ Database connection successful");

    // –ó–∞–ø—É—Å–∫ HTTP-—Å–µ—Ä–≤–µ—Ä–∞
    app.listen(PORT, () => {
      console.log(`‚úÖ HTTP-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ http://localhost:${PORT}`);
    });

    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è FTP-—Å–µ—Ä–≤–µ—Ä–∞
    const ftpServer = new FtpSrv({
      url: "ftp://127.0.0.1:21",
      anonymous: false,
      pasv_url: "127.0.0.1",
      pasv_min: 1024,
      pasv_max: 1048,
    });

    // –®–ª—è—Ö–∏ –¥–æ –ø–∞–ø–æ–∫
    const shopFolder = path.resolve("C:\\–ñ—É—Ä–Ω–∞–ª Torgsoft");
    const torgsoftFolder = path.resolve(
      "C:\\–ñ—É—Ä–Ω–∞–ª Torgsoft\\–ü—Ä–∏–π–º–∞–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω—å\\3"
    );
console.log('FTP_PASS_SILVAGO',FTP_PASS_SILVAGO);
    // –õ–æ–≥—ñ–∫–∞ –¥–æ—Å—Ç—É–ø—É –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
    ftpServer.on("login", ({ username, password }, resolve, reject) => {
      if (username === FTP_USER_SILVAGO && password === FTP_PASS_SILVAGO) {
        console.log(`‚úÖ –£—Å–ø—ñ—à–Ω–∏–π –≤—Ö—ñ–¥ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω—É: ${username}`);
        resolve({ root: shopFolder }); // –ú–∞–≥–∞–∑–∏–Ω –æ—Ç—Ä–∏–º—É—î –¥–æ—Å—Ç—É–ø –¥–æ "C:\–ñ—É—Ä–Ω–∞–ª Torgsoft"
      } else if (
        username === FTP_USER_TORGSOFT &&
        password === FTP_PASS_TORGSOFT
      ) {
        console.log(`‚úÖ –£—Å–ø—ñ—à–Ω–∏–π –≤—Ö—ñ–¥ –¥–ª—è Torgsoft: ${username}`);
        resolve({ root: torgsoftFolder }); // Torgsoft –æ—Ç—Ä–∏–º—É—î –¥–æ—Å—Ç—É–ø –¥–æ "C:\–ñ—É—Ä–Ω–∞–ª Torgsoft\–ü—Ä–∏–π–º–∞–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω—å\3"
      } else {
        console.log(`üö´ –í—ñ–¥–º–æ–≤–∞ —É –¥–æ—Å—Ç—É–ø—ñ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: ${username}`);
        reject(new Error("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –ª–æ–≥—ñ–Ω –∞–±–æ –ø–∞—Ä–æ–ª—å!"));
      }
    });

    // –ó–∞–ø—É—Å–∫ FTP-—Å–µ—Ä–≤–µ—Ä–∞
    ftpServer.listen().then(() => {
      console.log(`‚úÖ FTP-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ ftp://localhost:${FTP_PORT}`);
    });

    // üïí –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤ –∫–æ–∂–Ω—ñ 60 —Å–µ–∫—É–Ω–¥
    // setInterval(async () => {
    //   try {
    //     console.log("‚è≥ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤...");

    //     // 1Ô∏è‚É£ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤ –∑ FTP
    //     await downloadFiles();

    //     // 2Ô∏è‚É£ –û–Ω–æ–≤–ª–µ–Ω–Ω—è –±–æ–Ω—É—Å—ñ–≤ –∫–ª—ñ—î–Ω—Ç—ñ–≤
    //     console.log("‚è≥ –û–Ω–æ–≤–ª–µ–Ω–Ω—è –±–æ–Ω—É—Å—ñ–≤ –∫–ª—ñ—î–Ω—Ç—ñ–≤...");
    //     await updateClientBonuses();

    //     console.log("üéâ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤ —Ç–∞ –±–æ–Ω—É—Å—ñ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.");
    //   } catch (error) {
    //     console.error(
    //       "üö® –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤ –∞–±–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –±–æ–Ω—É—Å—ñ–≤:",
    //       error
    //     );
    //   }
    // }, 60000); // –∫–æ–∂–Ω—ñ 60 —Å–µ–∫—É–Ω–¥
  } catch (error) {
    console.error("üö® Database connection failure:", error);
    process.exit(1);
  }
}

run();
